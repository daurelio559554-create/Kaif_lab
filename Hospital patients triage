package aurelio_lab_exam2;
import java.util.*;


class Patient implements Comparable<Patient> {
	String name;
	int priority;
	String condition;
	String arrivalTime;
	public Patient(String name, int priority, String condition, String arrivalTime) {
	this.name = name;
	this.priority = priority;
	this.condition = condition;
	this.arrivalTime = arrivalTime;
	}
	
	public int compareTo(Patient other) {
		if (this.priority !=other.priority) return Integer.compare(this.priority, other.priority);
        return this.arrivalTime.compareTo(other.arrivalTime);
		
}
	


public String toString() {
    return "[P" + priority + "] " + name + " - " + condition + " (" + arrivalTime + ")";
}
}

class ERQueue {
PriorityQueue<Patient> queue = new PriorityQueue<>();
List<Patient> list = new ArrayList<>();

public void arrive(String name, int priority, String condition, String time) {
    Patient p = new Patient(name, priority, condition, time);
    queue.offer(p);
    list.add(p);
}

public void treatNext() {
    Patient p = queue.poll();
    if (p != null) {
        System.out.println("\n>>> Treating patient now...");
        System.out.println("Treated: " + p);
        list.remove(p);
    }
}

public void displayQueue() {
    List<Patient> temp = new ArrayList<>(queue);
    Collections.sort(temp);
    System.out.println("\n=== UPDATED QUEUE ===");
    System.out.println("Patients Waiting: " + temp.size() + "\n");
    for (int i = 0; i < temp.size(); i++) {
        System.out.println((i + 1) + ". " + temp.get(i));
    }
}
}

public class Patients {
public static void main(String[] args) {
    ERQueue er = new ERQueue();
    er.arrive("Pedro Cruz", 1, "Head injury - NOW UNCONSCIOUS !!", "23:52");
    er.arrive("Carlos Mendoza", 2, "Compound fracture - leg", "23:50");
    er.arrive("Lisa Wang", 2, "Severe asthma attack", "23:56");
    er.arrive("Maria Santos", 3, "Deep laceration on arm", "23:48");
    er.arrive("Ana Lim", 4, "Sprained ankle", "23:49");
    er.displayQueue();
    er.treatNext();
    er.displayQueue();
}
}
